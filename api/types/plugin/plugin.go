package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

// Plugin A plugin for the Engine API
// swagger:model
type Plugin struct {

	// config
	// Required: true
	Config Config `json:"Config"`

	// True if the plugin is running. False if the plugin is not running, only installed.
	// Required: true
	Enabled bool `json:"Enabled"`

	// Id
	ID string `json:"Id,omitempty"`

	// name
	// Required: true
	Name string `json:"Name"`

	// plugin remote reference used to push/pull the plugin
	Reference string `json:"Reference,omitempty"`

	// settings
	// Required: true
	Settings Settings `json:"Settings"`
}

// Config The config of a plugin.
// swagger:model Config
type Config struct {

	// args
	// Required: true
	Args ConfigArgs `json:"Args"`

	// description
	// Required: true
	Description string `json:"Description"`

	// Docker Version used to create the plugin
	DockerVersion string `json:"DockerVersion,omitempty"`

	// documentation
	// Required: true
	Documentation string `json:"Documentation"`

	// entrypoint
	// Required: true
	Entrypoint []string `json:"Entrypoint"`

	// env
	// Required: true
	// Env []Env `json:"Env"`

	// interface
	// Required: true
	Interface ConfigInterface `json:"Interface"`

	// ipc host
	// Required: true
	IpcHost bool `json:"IpcHost"`

	// linux
	// Required: true
	Linux ConfigLinux `json:"Linux"`

	// mounts
	// Required: true
	Mounts []Mount `json:"Mounts"`

	// network
	// Required: true
	Network ConfigNetwork `json:"Network"`

	// pid host
	// Required: true
	PidHost bool `json:"PidHost"`

	// propagated mount
	// Required: true
	PropagatedMount string `json:"PropagatedMount"`

	// user
	User ConfigUser `json:"User,omitempty"`

	// work dir
	// Required: true
	WorkDir string `json:"WorkDir"`

	// rootfs
	Rootfs *ConfigRootfs `json:"rootfs,omitempty"`
}

// ConfigArgs plugin config args
// swagger:model ConfigArgs
type ConfigArgs struct {

	// description
	// Required: true
	Description string `json:"Description"`

	// name
	// Required: true
	Name string `json:"Name"`

	// settable
	// Required: true
	Settable []string `json:"Settable"`

	// value
	// Required: true
	Value []string `json:"Value"`
}

// ConfigInterface The interface between Docker and the plugin
// swagger:model ConfigInterface
type ConfigInterface struct {

	// Protocol to use for clients connecting to the plugin.
	ProtocolScheme string `json:"ProtocolScheme,omitempty"`

	// socket
	// Required: true
	Socket string `json:"Socket"`

	// types
	// Required: true
	// Types []InterfaceType `json:"Types"`
}

// ConfigLinux plugin config linux
// swagger:model ConfigLinux
type ConfigLinux struct {

	// allow all devices
	// Required: true
	AllowAllDevices bool `json:"AllowAllDevices"`

	// capabilities
	// Required: true
	Capabilities []string `json:"Capabilities"`

	// devices
	// Required: true
	// Devices []Device `json:"Devices"`
}

// ConfigNetwork plugin config network
// swagger:model ConfigNetwork
type ConfigNetwork struct {

	// type
	// Required: true
	Type string `json:"Type"`
}

// ConfigRootfs plugin config rootfs
// swagger:model ConfigRootfs
type ConfigRootfs struct {

	// diff ids
	DiffIds []string `json:"diff_ids"`

	// type
	Type string `json:"type,omitempty"`
}

// ConfigUser plugin config user
// swagger:model ConfigUser
type ConfigUser struct {

	// g ID
	GID uint32 `json:"GID,omitempty"`

	// UID
	UID uint32 `json:"UID,omitempty"`
}

// Settings Settings that can be modified by users.
// swagger:model Settings
type Settings struct {

	// args
	// Required: true
	Args []string `json:"Args"`

	// devices
	// Required: true
	// Devices []Device `json:"Devices"`

	// env
	// Required: true
	Env []string `json:"Env"`

	// mounts
	// Required: true
	Mounts []Mount `json:"Mounts"`
}
